; generated by Component: ARM Compiler 5.99 update 4 (build 402) Tool: ArmCC [5b6802]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\targetdev.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\targetdev.d --feedback=.\obj\NANO100B_ISP_HID_PB15.fed --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\ -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\Device\Nuvoton\Nano100Series\Include -I..\..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\?ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=531 --omf_browse=.\obj\targetdev.crf ..\targetdev.c]
                          THUMB

                          AREA ||i.GetApromSize||, CODE, READONLY, ALIGN=1

                  GetApromSize PROC
;;;11     //the smallest of APROM size is 32K (32K, 64K, 123K)
;;;12     uint32_t GetApromSize()
000000  b538              PUSH     {r3-r5,lr}
;;;13     {
;;;14         uint32_t size = 0x8000, data;
000002  2401              MOVS     r4,#1
000004  03e4              LSLS     r4,r4,#15
                  |L1.6|
;;;15         int result;
;;;16     
;;;17         do
;;;18         {
;;;19             result = FMC_Read_User(size, &data);
000006  4669              MOV      r1,sp
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       FMC_Read_User
;;;20     
;;;21             if (result < 0)
00000e  2800              CMP      r0,#0
000010  da07              BGE      |L1.34|
;;;22             {
;;;23                 if (size == 0x20000)
000012  2001              MOVS     r0,#1
000014  0440              LSLS     r0,r0,#17
000016  4284              CMP      r4,r0
000018  d101              BNE      |L1.30|
;;;24                 {
;;;25                     size = 123 * 1024;
00001a  247b              MOVS     r4,#0x7b
00001c  02a4              LSLS     r4,r4,#10
                  |L1.30|
;;;26                 }
;;;27     
;;;28                 return size;
00001e  4620              MOV      r0,r4
;;;29             }
;;;30             else
;;;31             {
;;;32                 size *= 2;
;;;33             }
;;;34         }
;;;35         while (1);
;;;36     }
000020  bd38              POP      {r3-r5,pc}
                  |L1.34|
000022  0064              LSLS     r4,r4,#1              ;32
000024  e7ef              B        |L1.6|
;;;37     
                          ENDP


                          AREA ||i.GetDataFlashInfo||, CODE, READONLY, ALIGN=2

                  GetDataFlashInfo PROC
;;;37     
;;;38     void GetDataFlashInfo(uint32_t *addr, uint32_t *size)
000000  b5f8              PUSH     {r3-r7,lr}
;;;39     {
000002  4605              MOV      r5,r0
;;;40         uint32_t uData;
;;;41         *size = 0;
000004  2600              MOVS     r6,#0
000006  460c              MOV      r4,r1                 ;39
;;;42         FMC_Read_User(Config0, &uData);
000008  600e              STR      r6,[r1,#0]
00000a  2003              MOVS     r0,#3
00000c  4669              MOV      r1,sp
00000e  0500              LSLS     r0,r0,#20
000010  f7fffffe          BL       FMC_Read_User
;;;43     
;;;44         if ((uData & 0x01) == 0)   //DFEN enable
000014  9800              LDR      r0,[sp,#0]
000016  07c0              LSLS     r0,r0,#31
000018  d004              BEQ      |L2.36|
;;;45         {
;;;46             FMC_Read_User(Config1, &uData);
;;;47             // filter the reserved bits in CONFIG1
;;;48             uData &= 0x000FFFFF;
;;;49             if (uData > g_apromSize || (uData & 0x1FF))   //avoid config1 value from error
;;;50             {
;;;51                 uData = g_apromSize;
;;;52             }
;;;53     
;;;54             *addr = uData;
;;;55             *size = g_apromSize - uData;
;;;56         }
;;;57         else
;;;58         {
;;;59             *addr = g_apromSize;
00001a  480d              LDR      r0,|L2.80|
00001c  6800              LDR      r0,[r0,#0]  ; g_apromSize
;;;60             *size = 0;
00001e  6028              STR      r0,[r5,#0]
000020  6026              STR      r6,[r4,#0]
;;;61         }
;;;62     }
000022  bdf8              POP      {r3-r7,pc}
                  |L2.36|
000024  4669              MOV      r1,sp                 ;46
000026  480b              LDR      r0,|L2.84|
000028  f7fffffe          BL       FMC_Read_User
00002c  9800              LDR      r0,[sp,#0]            ;48
00002e  4b08              LDR      r3,|L2.80|
000030  0302              LSLS     r2,r0,#12             ;48
000032  0b12              LSRS     r2,r2,#12             ;48
000034  9200              STR      r2,[sp,#0]            ;49
000036  6819              LDR      r1,[r3,#0]            ;49  ; g_apromSize
000038  428a              CMP      r2,r1                 ;49
00003a  d801              BHI      |L2.64|
00003c  05d0              LSLS     r0,r2,#23             ;49
00003e  d000              BEQ      |L2.66|
                  |L2.64|
000040  9100              STR      r1,[sp,#0]            ;51
                  |L2.66|
000042  9800              LDR      r0,[sp,#0]            ;54
000044  6028              STR      r0,[r5,#0]            ;55
000046  6819              LDR      r1,[r3,#0]            ;55  ; g_apromSize
000048  1a08              SUBS     r0,r1,r0              ;55
00004a  6020              STR      r0,[r4,#0]            ;55
00004c  bdf8              POP      {r3-r7,pc}
;;;63     
                          ENDP

00004e  0000              DCW      0x0000
                  |L2.80|
                          DCD      g_apromSize
                  |L2.84|
                          DCD      0x00300004

;*** Start embedded assembler ***

#line 1 "..\\targetdev.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_targetdev_c_11f79a65____REV16|
#line 388 "..\\..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___11_targetdev_c_11f79a65____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_targetdev_c_11f79a65____REVSH|
#line 402
|__asm___11_targetdev_c_11f79a65____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
